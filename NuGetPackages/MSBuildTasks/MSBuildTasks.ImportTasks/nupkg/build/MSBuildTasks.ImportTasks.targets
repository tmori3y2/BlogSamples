<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- NuGet Package Manager inserts MSBuildTasks.ImportTasks.targets below Microsoft.CSharp.targets
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="..\..\packages\MSBuildTasks.ImportTasks.x.x.x.x\build\MSBuildTasks.ImportTasks.targets" Condition="Exists('..\..\packages\MSBuildTasks.ImportTasks.x.x.x.x\build\MSBuildTasks.ImportTasks.targets')" />
  -->

  <PropertyGroup Condition="Exists('$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll')">
    <CodeTaskFactoryAssembly>$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll</CodeTaskFactoryAssembly>
  </PropertyGroup>
  <PropertyGroup Condition="Exists('$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll')">
    <CodeTaskFactoryAssembly>$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll</CodeTaskFactoryAssembly>
  </PropertyGroup>
  <PropertyGroup Condition="Exists('$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll')">
    <CodeTaskFactoryAssembly>$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll</CodeTaskFactoryAssembly>
  </PropertyGroup>

  <UsingTask
    TaskName="XmlUpdate"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(CodeTaskFactoryAssembly)" >
    <ParameterGroup>
      <WorkingDirectory ParameterType="System.String" Required="true" />
      <NuSpecFile ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Xml"/>
      <Using Namespace="System" />
      <Using Namespace="System.Xml" />
      <Using Namespace="System.Xml.XPath" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        XmlDocument document = new XmlDocument();
        document.Load(WorkingDirectory + NuSpecFile);
        XPathNavigator navigator = document.CreateNavigator();
        navigator.MoveToFollowing("copyright", "");
        navigator.SetValue("$copyright$");
        navigator.InsertAfter("<developmentDependency>false</developmentDependency>");
        document.Save(WorkingDirectory + NuSpecFile);
        ]]>
      </Code>
    </Task>
  </UsingTask>
  
  <ItemGroup >
    <PreviousNuPkgFile Include="$(ProjectDir)$(OutDir)*.nupkg" />
  </ItemGroup>
  
  <Target Name="CleanNuPkgFile"
          BeforeTargets="BeforeClean;BeforeBuild"
          Condition=" '$(CreatesNuGetPackage)' == 'true' and '@(PreviousNuPkgFile)' != '' ">
    <Delete Files="@(PreviousNuPkgFile)"/>
  </Target>
  
  <Target Name="NuSpecProject"
          BeforeTargets="BeforeBuild"
          Condition=" '$(CreatesNuGetPackage)' == 'true' and !Exists('$(ProjectDir)$(NuSpecFile)') ">
    <Exec WorkingDirectory="$(ProjectDir)"
          Command="&quot;$(NuGetExe)&quot; spec" />
    <XmlUpdate WorkingDirectory="$(ProjectDir)"
               NuSpecFile="$(NuSpecFile)" />
    <Error Text="Add .nuspec file to the project and edit it." />
  </Target>

  <Target Name="NuGetPack"
          AfterTargets="AfterBuild"
          Condition=" '$(CreatesNuGetPackage)' == 'true' and Exists('$(ProjectDir)$(NuSpecFile)') ">
    <CallTarget Targets="NuGetPackProject"
                Condition=" '$(NuGetPacksProject)' == 'true'  and '$(NuGetPacksForTool)' == 'false' " />
    <CallTarget Targets="NuGetPackTool"
                Condition=" '$(NuGetPacksProject)' == 'true'  and '$(NuGetPacksForTool)' == 'true' " />
    <CallTarget Targets="NuGetPackNuSpec"
                Condition=" '$(NuGetPacksProject)' == 'false' " />
  </Target>
  
  <Target Name="NuGetPackProject">
    <Exec WorkingDirectory="$(ProjectDir)"
          Command="&quot;$(NuGetExe)&quot; pack -Prop Configuration=$(Configuration) -OutputDirectory &quot;bin\$(Configuration)&quot;" />
  </Target>
  <Target Name="NuGetPackTool">
    <Exec WorkingDirectory="$(ProjectDir)"
          Command="&quot;$(NuGetExe)&quot; pack -Tool -Prop Configuration=$(Configuration) -OutputDirectory &quot;bin\$(Configuration)&quot;" />
  </Target>
  <Target Name="NuGetPackNuSpec">
    <Exec WorkingDirectory="$(ProjectDir)"
          Command="&quot;$(NuGetExe)&quot; pack &quot;$(NuSpecFile)&quot; -Prop Configuration=$(Configuration) -OutputDirectory &quot;bin\$(Configuration)&quot;" />
  </Target>
  
  <Target Name="DeployNuPkgFile"
          AfterTargets="NuGetPack"
          Condition=" '$(CreatesNuGetPackage)' == 'true' and '$(Configuration)' == 'Release' ">
    <ItemGroup >
      <DeployingNuPkgFile Include="$(OutDir)*.nupkg" />
    </ItemGroup>
    <Error Condition=" '@(DeployingNuPkgFile)' == '' "
           Text="Build .nuspec file correctly." />
    <Error Condition=" '@(DeployingNuPkgFile)' != '' and  Exists('$(NuGetDeploy)\%(DeployingNuPkgFile.Filename)%(DeployingNuPkgFile.Extension)') "
           Text="Update .nuspec file version." />
    <Copy Condition=" '@(DeployingNuPkgFile)' != '' "
          SourceFiles="@(DeployingNuPkgFile)"
          DestinationFiles="@(DeployingNuPkgFile->'$(NuGetDeploy)\%(Filename)%(Extension)')" />
  </Target>

  <Import Project="$(ImportedTask).targets" Condition="Exists('$(ImportedTask).targets')"/>
</Project>
